{"version":3,"file":"../../base/flexible.css","sources":["base/flexible.scss"],"sourcesContent":["/* 字体 */\n@mixin font-dpr($font-size) {\n    font-size: $font-size;\n    [data-dpr=\"2\"] & {\n        font-size: $font-size * 2;\n    }\n    [data-dpr=\"3\"] & {\n        font-size: $font-size * 3;\n    }\n}\n/* rem */\n/* 我们项目的视觉稿为750px */\n$rem-baseline: 75px !default;\n@function rem-separator($list) {\n    @if function-exists(\"list-separator\")==true {\n        @return list-separator($list);\n    }\n    $test-list: ();\n    @each $item in $list {\n        $test-list: append($test-list, $item, space);\n    }\n    @return if($test-list==$list, space, comma);\n}\n@mixin rem-baseline($zoom: 100%) {\n    font-size: $zoom / 16px * $rem-baseline;\n}\n@function rem-convert($to, $values...) {\n    $result: ();\n    $separator: rem-separator($values);\n    @each $value in $values {\n        @if type-of($value)==\"number\" and unit($value)==\"rem\" and $to==\"px\" {\n            $result: append($result, $value / 1rem * $rem-baseline, $separator);\n        }\n        @else if type-of($value)==\"number\" and unit($value)==\"px\" and $to==\"rem\" {\n            $result: append($result, $value / ($rem-baseline / 1rem), $separator);\n        }\n        @else if type-of($value)==\"list\" {\n            $result: append($result, rem-convert($to, $value...), $separator);\n        }\n        @else {\n            $result: append($result, $value, $separator);\n        }\n    }\n    @return if(length($result)==1, nth($result, 1), $result);\n}\n@function px2rem($values...) {\n    //@if $rem-px-only {\n    //    @return rem-convert(px, $values...);\n    //} @else {\n    @return rem-convert(rem, $values...);\n    //}\n}\n@mixin px2rem($properties, $values...) {\n    @if type-of($properties)==\"map\" {\n        @each $property in map-keys($properties) {\n            @include px2rem($property, map-get($properties, $property));\n        }\n    }\n    @else {\n        @each $property in $properties {\n            //@if $rem-fallback or $rem-px-only {\n            //    #{$property}: rem-convert(px, $values...);\n            //}\n            //@if not $rem-px-only {\n            #{$property}: rem-convert(rem, $values...);\n            //}\n        }\n    }\n}"],"mappings":"","names":[]}